name: Tests

on:
  push:
    branches: [ master ]
  pull_request:

jobs:

  run_tests:
    strategy:
      matrix:
        include:
          - { os: 'ubuntu', python-version: '3.8' }
          - { os: 'ubuntu', python-version: '3.9' }
          - { os: 'ubuntu', python-version: '3.10' }
          - { os: 'ubuntu', python-version: '3.11' }
          - { os: 'macos', python-version: '3.8' }
          - { os: 'macos', python-version: '3.11' }
      fail-fast: false
    runs-on: ${{ matrix.os }}-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: Key-v1-${{ matrix.python-version }}-${{ hashFiles('requirements.txt') }}-${{ hashFiles('requirements-dev.txt') }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-dev.txt
      - name: Build bitsandbytes
        run: |
          pip install bitsandbytes==0.41.1
      - name: Build hivemind
        run: |
          pip install .
      - name: Test
        run: |
          cd tests
          export HIVEMIND_MEMORY_SHARING_STRATEGY=${{ matrix.os == 'ubuntu' && 'file_descriptor' || 'file_system' }}

          ulimit -n 8192
          export no_proxy=*  # See https://github.com/kevlened/pytest-parallel/issues/93#issuecomment-839913651
          export OBJC_DISABLE_INITIALIZE_FORK_SAFETY=YES
          export OMP_NUM_THREADS=1

          pytest test_dht* --durations=0 --durations-min=1.0 -v

  build_and_test_p2pd:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: '1.20.11'
          check-latest: true
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.8'
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: Key-v1-3.8-${{ hashFiles('requirements.txt') }}-${{ hashFiles('requirements-dev.txt') }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install -r requirements.txt
          pip install -r requirements-dev.txt
      - name: Build hivemind
        run: |
          pip install . --global-option=build_py --global-option="--buildgo" --no-use-pep517
      - name: Test
        run: |
          cd tests
          export HIVEMIND_MEMORY_SHARING_STRATEGY=file_descriptor
          pytest -k "p2p" -v

  codecov_in_develop_mode:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.8'
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: Key-v1-3.8-${{ hashFiles('requirements.txt') }}-${{ hashFiles('requirements-dev.txt') }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install -r requirements.txt
          pip install -r requirements-dev.txt
      - name: Build bitsandbytes
        run: |
          pip install bitsandbytes==0.41.1
      - name: Build hivemind
        run: |
          pip install -e . --no-use-pep517
      - name: Test
        run: |
          export HIVEMIND_MEMORY_SHARING_STRATEGY=file_descriptor
          pytest --cov hivemind --cov-config=pyproject.toml -v tests
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
